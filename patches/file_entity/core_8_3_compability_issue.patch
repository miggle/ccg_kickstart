diff --git a/src/FileEntityServiceProvider.php b/src/FileEntityServiceProvider.php
index a59fc9a..3c4a65b 100644
--- a/src/FileEntityServiceProvider.php
+++ b/src/FileEntityServiceProvider.php
@@ -8,6 +8,8 @@ namespace Drupal\file_entity;

 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\DependencyInjection\ServiceProviderBase;
+use Drupal\file_entity\Normalizer\FileEntityNormalizer;
+use Drupal\file_entity\Normalizer\FileItemNormalizer;
 use Symfony\Component\DependencyInjection\Definition;
 use Symfony\Component\DependencyInjection\Reference;

@@ -21,11 +23,11 @@ class FileEntityServiceProvider extends ServiceProviderBase {
    */
   public function alter(ContainerBuilder $container) {
     $modules = $container->getParameter('container.modules');
-    // Check for installed REST & HAL modules, as HAL requires REST.
+    // Check for installed HAL module.
     if (isset($modules['hal']) ) {
       // Add a normalizer service for file entities.
-      $service_definition = new Definition('Drupal\file_entity\Normalizer\FileEntityNormalizer', array(
-        new Reference('rest.link_manager'),
+      $service_definition = new Definition(FileEntityNormalizer::class, array(
+        new Reference('hal.link_manager'),
         new Reference('entity.manager'),
         new Reference('module_handler'),
       ));
@@ -35,8 +37,8 @@ class FileEntityServiceProvider extends ServiceProviderBase {
       $container->setDefinition('serializer.normalizer.entity.file_entity', $service_definition);

       // Add a normalizer service for file fields.
-      $service_definition = new Definition('Drupal\file_entity\Normalizer\FileItemNormalizer', array(
-        new Reference('rest.link_manager'),
+      $service_definition = new Definition(FileItemNormalizer::class, array(
+        new Reference('hal.link_manager'),
         new Reference('serializer.entity_resolver'),
       ));
       // Supersede EntityReferenceItemNormalizer.
